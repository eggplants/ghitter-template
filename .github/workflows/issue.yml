name: Daily issue
on:
  #schedule:
  #  - cron: "0 15 * * *" # at 00:00 in UTC+9
  workflow_dispatch:
jobs:
  check:
    env:
      TZ: 'Asia/Tokyo'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check secrets is set
        run: |
          if [ -z "${{ secrets.GH_MYTOKEN }}" ]; then
            echo 'MUST:'
            echo '- generate PAT (with only `public_repo` or `repo` if needed)'
            echo '- set it to `secrets.GH_MYTOKEN`'
            exit 1
          fi
  close:
    needs: check
    env:
      TZ: 'Asia/Tokyo'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get latest issue number
        id: get_num
        run: |
          echo -n '::set-output name=num::'
          n="$(
            curl -s \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/issues" |
              jq '
                .[]|select(
                  .user.login == "'"${{ github.repository_owner }}"'" and
                  .state == "open" and
                  .labels[0].name == "Twitter"
                ).number
              '
          )"
          if [ -z "$n" ]; then
            exit 1
          else
            echo "$n"
          fi
      - name: Archive
        if: steps.get_num.outputs.num != ''
        run: |
          mkdir -p "archives/csv/$(date +%Y -d-1day)/$(date +%m -d-1day)"
          {
            echo "user,updated_at,body,url"
            curl -s \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/issues/${{ steps.get_num.outputs.num }}" |
              jq -r '
                [
                  .user.login, .updated_at, .body,
                  ([.html_url, "#issue-", (.id|tostring)]|add)
                ]|@csv
              '
            curl -s \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/issues/${{ steps.get_num.outputs.num }}/comments" |
              jq -r '
                .[]|[
                  .user.login, .updated_at, .body,
                  .html_url
                ]|@csv'
          } > "archives/csv/$(date +%Y -d-1day)/$(date +%m -d-1day)/$(date +%Y-%m-%d -d-1day).csv"
          mkdir -p "archives/md/$(date +%Y -d-1day)/$(date +%m -d-1day)"
          {
            echo -e "# $(date +%Y-%m-%d -d-1day)\n"
            echo "<https://github.com/${{ github.repository }}/issues/${{ steps.get_num.outputs.num }}>"
            echo -e "\n---\n"
            curl -s \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/issues/${{ steps.get_num.outputs.num }}" |
              jq -r '
                [
                  .body, "",
                  (
                    [
                      "[@", .user.login, "](", .user.html_url, "), ",
                      "*updated at: [", .updated_at, "](", .html_url, "#issue-", (.id|tostring), ")*"
                    ]|add
                  )
                ]|join("\n")
              '
            curl -s \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/issues/${{ steps.get_num.outputs.num }}/comments" |
              jq -r '
                map(
                  [
                    .body, "",
                    ([
                      "[@", .user.login, "](", .user.html_url, "), ",
                      "*updated at: [", .updated_at, "](", .html_url, ")*"
                    ]|add)
                  ]|join("\n")
                )|join("\n\n---\n\n")
              ' > _
            if [ -n "$(sed '/^$/d' _)" ]; then
              echo -e "\n---\n"
              cat _
            fi
            rm _
          } > "archives/md/$(date +%Y -d-1day)/$(date +%m -d-1day)/$(date +%Y-%m-%d -d-1day).md"
      - name: Commit
        if: steps.get_num.outputs.num != ''
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git remote set-url origin "https://${{ github.repository_owner }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git checkout master
          git add .
          if git commit -m "update: $(date +%Y-%m-%d)"; then
            git push origin master
          fi
          :
      - name: Close
        if: steps.get_num.outputs.num != ''
        uses: actions/github-script@v5
        with:
          result-encoding: string
          github-token: ${{ secrets.GH_MYTOKEN }}
          debug: true
          script: |
            const q_result = await github.graphql(`
                    query {
                      search(
                        type: ISSUE
                        query: "label:Twitter is:open repo:${{ github.repository }} author:${{ github.repository_owner }}"
                        last: 1
                      ) {
                        nodes {
                          ... on Issue {
                            id
                            number
                          }
                        }
                      }
                    }
                  `);
            if (
              q_result.search.nodes.length !== 1 ||
              q_result.search.nodes[0].number !== ${{ steps.get_num.outputs.num }}
            ) {
              console.log("cannot fetch data of target issue");
              process.exit(1);
            }
            const issueId = q_result.search.nodes[0].id;

            const m_result = await github.graphql(
              `
                      mutation($issueId: ID!) {
                        deleteIssue(input: {issueId: $issueId}) {
                          clientMutationId
                        }
                      }
                    `,
              {
                issueId: issueId,
                headers: {
                  "GraphQL-Features": "projects_next_graphql",
                },
              }
            );
            if (m_result && m_result.deleteIssue) {
              console.log(m_result.deleteIssue.clientMutationId);
              process.exit(0);
            } else {
              console.log("cannot delete issue");
              process.exit(1);
            }

  create:
    needs: close
    runs-on: ubuntu-latest
    env:
      TZ: 'Asia/Tokyo'
    steps:
      - uses: actions/checkout@v2
      - name: Create
        run: |
          curl -s \
            -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -u "${{ github.repository_owner }}":"${{ secrets.GH_MYTOKEN }}" \
            -d '{"title":"'"$(date +%Y-%m-%d)"'","body":"![_](https://github.githubassets.com/images/mona-loading-default.gif)","labels":["Twitter"],"assignees":["'${{ github.repository_owner }}'"]}' \
            "https://api.github.com/repos/${{ github.repository }}/issues"
